// <auto-generated />
using System;
using Hermes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hermes.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hermes.Data.Models.Conversation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("Time");

                    b.Property<string>("UserOne")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("User_One");

                    b.Property<string>("UserTwo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("User_Two");

                    b.HasKey("Id");

                    b.HasIndex("UserOne");

                    b.HasIndex("UserTwo");

                    b.ToTable("Conversation", (string)null);
                });

            modelBuilder.Entity("Hermes.Data.Models.ConversationReply", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("id");

                    b.Property<string>("CIdFk")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("c_id_fk");

                    b.Property<string>("Reply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reply");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.Property<string>("UserIdFk")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("user_id_fk");

                    b.HasKey("Id");

                    b.HasIndex("CIdFk");

                    b.HasIndex("UserIdFk");

                    b.ToTable("ConversationsReplies");
                });

            modelBuilder.Entity("Hermes.Data.Models.FriendList", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FriendId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("MessageTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("NewMessage")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.HasIndex("UserId");

                    b.ToTable("FriendList", (string)null);
                });

            modelBuilder.Entity("Hermes.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hermes.Data.Models.Conversation", b =>
                {
                    b.HasOne("Hermes.Data.Models.User", "UserOneNavigation")
                        .WithMany("ConversationUserOneNavigations")
                        .HasForeignKey("UserOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Conversation_users");

                    b.HasOne("Hermes.Data.Models.User", "UserTwoNavigation")
                        .WithMany("ConversationUserTwoNavigations")
                        .HasForeignKey("UserTwo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Conversation_users1");

                    b.Navigation("UserOneNavigation");

                    b.Navigation("UserTwoNavigation");
                });

            modelBuilder.Entity("Hermes.Data.Models.ConversationReply", b =>
                {
                    b.HasOne("Hermes.Data.Models.Conversation", "CIdFkNavigation")
                        .WithMany("ConversationReplies")
                        .HasForeignKey("CIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_conversation_reply_conversation");

                    b.HasOne("Hermes.Data.Models.User", "UserIdFkNavigation")
                        .WithMany("ConversationReplies")
                        .HasForeignKey("UserIdFk")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_conversation_reply_users1");

                    b.Navigation("CIdFkNavigation");

                    b.Navigation("UserIdFkNavigation");
                });

            modelBuilder.Entity("Hermes.Data.Models.FriendList", b =>
                {
                    b.HasOne("Hermes.Data.Models.User", "Friend")
                        .WithMany("FriendListFriends")
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_FriendList_users1");

                    b.HasOne("Hermes.Data.Models.User", "User")
                        .WithMany("FriendListUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FriendList_users");

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hermes.Data.Models.Conversation", b =>
                {
                    b.Navigation("ConversationReplies");
                });

            modelBuilder.Entity("Hermes.Data.Models.User", b =>
                {
                    b.Navigation("ConversationReplies");

                    b.Navigation("ConversationUserOneNavigations");

                    b.Navigation("ConversationUserTwoNavigations");

                    b.Navigation("FriendListFriends");

                    b.Navigation("FriendListUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
